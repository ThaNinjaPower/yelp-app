{"version":3,"sources":["components/SearchCard/index.js","pages/Search/index.js","pages/Details/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchCard","props","Card","bg","border","text","Body","Title","color","result","name","rating","review_count","Subtitle","location","address1","city","state","zip_code","display_phone","Footer","to","Button","onClick","searchDetails","id","Search","CardColumns","undefined","searchResults","map","Details","CardGroup","Img","src","businessDetails","image_url","Header","App","input","search_results","selected_business_id","business_id_details","handleInputChange","value","target","setState","searchBusiness","axios","get","process","headers","then","response","console","log","data","businesses","businessID","className","Navbar","variant","Brand","href","Form","inline","FormControl","type","placeholder","this","onChange","path","render","searchProps","detailProps","exact","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wUAuBeA,MAjBf,SAAoBC,GAChB,OACI,eAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,OAAO,OAAOC,KAAK,QAAnC,UACI,eAACH,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKK,MAAN,CAAYC,MAAM,QAAlB,SAA0B,4BAAIP,EAAMQ,OAAOC,SAC3C,eAACR,EAAA,EAAKK,MAAN,WAAaN,EAAMQ,OAAOE,OAA1B,KAAoCV,EAAMQ,OAAOG,aAAjD,eACA,cAACV,EAAA,EAAKW,SAAN,UAAgBZ,EAAMQ,OAAOK,SAASC,WACtC,eAACb,EAAA,EAAKW,SAAN,WAAgBZ,EAAMQ,OAAOK,SAASE,KAAtC,KAA8Cf,EAAMQ,OAAOK,SAASG,MAApE,IAA4EhB,EAAMQ,OAAOK,SAASI,YAClG,cAAChB,EAAA,EAAKK,MAAN,UAAaN,EAAMQ,OAAOU,mBAE9B,cAACjB,EAAA,EAAKkB,OAAN,UACI,cAAC,IAAD,CAAMC,GAAG,WAAT,SAAoB,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAMuB,cAAcvB,EAAMQ,OAAOgB,KAAxD,6BCArBC,MAXf,SAAgBzB,GACZ,OACI,cAAC0B,EAAA,EAAD,eAC6BC,IAAxB3B,EAAM4B,eAA+B5B,EAAM4B,cAAcC,KAAI,SAAArB,GAAM,OAChE,cAAC,EAAD,CAAYA,OAAQA,EAAQe,cAAevB,EAAMuB,sB,QCiBlDO,MAxBf,SAAiB9B,GACb,OACI,8BACI,eAAC+B,EAAA,EAAD,WACI,cAAC9B,EAAA,EAAD,UACI,cAACA,EAAA,EAAK+B,IAAN,CAAUC,IAAKjC,EAAMkC,gBAAgBC,cAEzC,eAAClC,EAAA,EAAD,CAAMC,GAAG,OAAOE,KAAK,QAArB,UACI,eAACH,EAAA,EAAKmC,OAAN,WACI,cAACnC,EAAA,EAAKK,MAAN,UAAaN,EAAMkC,gBAAgBzB,OACnC,cAACR,EAAA,EAAKW,SAAN,UAAgBZ,EAAMkC,gBAAgBhB,mBAG1C,cAACjB,EAAA,EAAKI,KAAN,UACI,cAACJ,EAAA,EAAKW,SAAN,8BAGJ,eAACX,EAAA,EAAKW,SAAN,WAAgBZ,EAAMkC,gBAAgBxB,OAAtC,KAAgDV,EAAMkC,gBAAgBvB,aAAtE,wBCqEL0B,G,kNA5EbrB,MAAQ,CACNsB,MAAO,GACPC,eAAgB,GAChBC,qBAAsB,GACtBC,oBAAqB,I,EAGvBC,kBAAoB,YAA4B,IAAfC,EAAc,EAAxBC,OAAUD,MAC/B,EAAKE,SAAS,CAAEP,MAAOK,K,EAGzBG,eAAiB,WACfC,IAAMC,IAAN,6FAAgG,EAAKhC,MAAMsB,MAA3G,qBAA6HW,UAA7H,sBAA+KA,YAAwC,CACrNC,QAAS,CACP,cAAgB,UAAhB,OAA2BD,uIAE5BE,MAAK,SAAAC,GACN,EAAKP,SAAS,CAAEL,qBAAsB,GAAIC,oBAAqB,KAC/DY,QAAQC,IAAI,qCAAsCF,GAClD,EAAKP,SAAS,CAAEN,eAAgBa,EAASG,KAAKC,iB,EAIlDjC,cAAgB,SAAAkC,GACdV,IAAMC,IAAN,iFAAoFS,GAAc,CAChGP,QAAS,CACP,cAAgB,UAAhB,OAA2BD,uIAE5BE,MAAK,SAAAC,GACNC,QAAQC,IAAI,8BAA+BF,GAC3C,EAAKP,SAAS,CAAEJ,oBAAqBW,EAASG,W,uDAIxC,IAAD,OACP,OACE,cAAC,IAAD,UACE,sBAAKG,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,CAAQzD,GAAG,OAAO0D,QAAQ,OAA1B,UACE,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAnB,wCACA,eAACC,EAAA,EAAD,CAAMC,QAAM,EAAZ,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,uBACZT,UAAU,UACVf,MAAOyB,KAAKpD,MAAMsB,MAClB+B,SAAUD,KAAK1B,oBAEjB,cAAC,IAAD,CAAMtB,GAAG,UAAUE,QAAS8C,KAAKtB,eAAjC,0BASJ,sBAAKY,UAAU,aAAf,UACE,cAAC,IAAD,CACEY,KAAK,UACLC,OAAQ,SAAAC,GAAW,OAAK,cAAC,EAAD,2BAAYA,GAAZ,IAAyB5C,cAAe,EAAKZ,MAAMuB,eAAgBhB,cAAe,EAAKA,oBAEjH,cAAC,IAAD,CACE+C,KAAK,WACLC,OAAQ,SAAAE,GAAW,OAAK,cAAC,EAAD,2BAAaA,GAAb,IAA0BvC,gBAAiB,EAAKlB,MAAMyB,0BAEhF,cAAC,IAAD,CAAOiC,OAAK,EAACJ,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUlD,GAAG,0B,GApETuD,cCAHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.4e44d133.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Card, Button, Image } from \"react-bootstrap\";\r\n\r\nfunction SearchCard(props) {\r\n    return (\r\n        <Card bg=\"dark\" border=\"dark\" text=\"white\">\r\n            <Card.Body>\r\n                <Card.Title color=\"light\"><b>{props.result.name}</b></Card.Title>\r\n                <Card.Title>{props.result.rating} ({props.result.review_count} reviews)</Card.Title>\r\n                <Card.Subtitle>{props.result.location.address1}</Card.Subtitle>\r\n                <Card.Subtitle>{props.result.location.city}, {props.result.location.state} {props.result.location.zip_code}</Card.Subtitle>\r\n                <Card.Title>{props.result.display_phone}</Card.Title>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <Link to=\"/details\"><Button onClick={() => props.searchDetails(props.result.id)}>Details</Button></Link>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SearchCard;","import React from \"react\";\r\n\r\nimport { CardColumns } from \"react-bootstrap\";\r\n\r\nimport SearchCard from \"../../components/SearchCard\";\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <CardColumns>\r\n            {props.searchResults !== undefined && props.searchResults.map(result =>\r\n                <SearchCard result={result} searchDetails={props.searchDetails}/>\r\n            )\r\n            }\r\n        </CardColumns>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { Card, CardGroup } from \"react-bootstrap\";\r\n\r\nfunction Details(props) {\r\n    return (\r\n        <div>\r\n            <CardGroup>\r\n                <Card>\r\n                    <Card.Img src={props.businessDetails.image_url} />\r\n                </Card>\r\n                <Card bg=\"dark\" text=\"white\">\r\n                    <Card.Header>\r\n                        <Card.Title>{props.businessDetails.name}</Card.Title>\r\n                        <Card.Subtitle>{props.businessDetails.display_phone}</Card.Subtitle>\r\n                        {/* {props.businessDetails.location.display_address.map(line=>(<Card.Subtitle>{line}</Card.Subtitle>))} */}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Subtitle>Regular Hours</Card.Subtitle>\r\n                        {/* {props.businessDetails.hours[0].open.map(shift => <div>{shift.day.getDay()}</div>)} */}\r\n                    </Card.Body>\r\n                    <Card.Subtitle>{props.businessDetails.rating} ({props.businessDetails.review_count} reviews)</Card.Subtitle>\r\n                </Card>\r\n            </CardGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport { Button, Form, FormControl, Navbar } from 'react-bootstrap';\n\nimport Search from \"./pages/Search\";\nimport Details from \"./pages/Details\";\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    input: '',\n    search_results: [],\n    selected_business_id: '',\n    business_id_details: {}\n  }\n\n  handleInputChange = ({ target: { value } }) => {\n    this.setState({ input: value });\n  }\n\n  searchBusiness = () => {\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${this.state.input}&latitude=${process.env.REACT_APP_NAPERVILLE_LAT}&longitude=${process.env.REACT_APP_NAPERVILLE_LON}`, {\n      headers: {\n        \"Authorization\": `Bearer ${process.env.REACT_APP_YELP_API_KEY}`,\n      }\n    }).then(response => {\n      this.setState({ selected_business_id: '', business_id_details: {} });\n      console.log(\"Business search results response: \", response);\n      this.setState({ search_results: response.data.businesses });\n    })\n  }\n\n  searchDetails = businessID => {\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${businessID}`, {\n      headers: {\n        \"Authorization\": `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n      }\n    }).then(response => {\n      console.log(\"Business details response: \", response);\n      this.setState({ business_id_details: response.data });\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Naperville Business Search</Navbar.Brand>\n            <Form inline>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search business name\"\n                className=\"mr-sm-2\"\n                value={this.state.input}\n                onChange={this.handleInputChange}\n              />\n              <Link to=\"/search\" onClick={this.searchBusiness}>\n              {/* <Button\n                  variant=\"primary\"\n                  onClick={this.searchBusiness}\n                >Search</Button> */}\n                Search\n              </Link>\n            </Form>\n          </Navbar>\n          <div className=\"whole-page\">\n            <Route\n              path=\"/search\"\n              render={searchProps => (<Search {...searchProps} searchResults={this.state.search_results} searchDetails={this.searchDetails} />)}\n            />\n            <Route\n              path=\"/details\"\n              render={detailProps => (<Details {...detailProps} businessDetails={this.state.business_id_details} />)}\n            />\n            <Route exact path=\"/\">\n              <Redirect to=\"/search\"/>\n            </Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}