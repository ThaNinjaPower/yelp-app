{"version":3,"sources":["components/SearchCard/index.js","pages/Search/index.js","pages/Details/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchCard","props","Card","bg","border","text","Body","Title","color","result","name","rating","review_count","location","display_address","map","line","Subtitle","className","display_phone","Footer","to","Button","onClick","changeId","id","Search","CardColumns","undefined","searchResults","searchDetails","businessId","Details","convertTime","time","parseInt","length","slice","convertDay","day","0","1","2","3","4","5","6","this","console","log","businessDetails","hours","CardGroup","Img","src","image_url","Header","open","shift","start","end","Component","App","state","input","search_results","business_id","business_id_details","handleInputChange","value","target","setState","searchBusiness","axios","get","process","headers","then","response","selected_business_id","data","businesses","businessID","localStorage","setItem","Navbar","variant","Brand","href","Form","inline","FormControl","type","placeholder","onChange","path","render","searchProps","detailProps","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a76ae177.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Card, Button, Image } from \"react-bootstrap\";\r\n\r\nfunction SearchCard(props) {\r\n    return (\r\n        <Card bg=\"dark\" border=\"dark\" text=\"white\">\r\n            <Card.Body>\r\n                <Card.Title color=\"light\"><b>{props.result.name}</b></Card.Title>\r\n                <Card.Title>{props.result.rating} ({props.result.review_count} reviews)</Card.Title>\r\n                {props.result.location.display_address.map(line=><Card.Subtitle className=\"mb-2\">{line}</Card.Subtitle>)}\r\n                <Card.Title>{props.result.display_phone}</Card.Title>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <Link to=\"/details\">\r\n                    <Button onClick={() => props.changeId(props.result.id)}>Details</Button>\r\n                </Link>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SearchCard;","import React from \"react\";\r\n\r\nimport { CardColumns } from \"react-bootstrap\";\r\n\r\nimport SearchCard from \"../../components/SearchCard\";\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <CardColumns>\r\n            {props.searchResults !== undefined && props.searchResults.map(result =>\r\n                <SearchCard\r\n                    result={result}\r\n                    searchDetails={props.searchDetails}\r\n                    changeId={props.changeId}\r\n                    businessId={props.businessId}\r\n                />\r\n            )\r\n            }\r\n        </CardColumns>\r\n    )\r\n}\r\n\r\nexport default Search;","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Card, CardGroup } from \"react-bootstrap\";\r\n\r\nclass Details extends Component {\r\n    componentDidMount() {\r\n        this.props.searchDetails(this.props.businessId);\r\n    }\r\n\r\n    convertTime = time => {\r\n\r\n        time = parseInt(time);\r\n        // Afternoon and evening (1PM - 11:59PM)\r\n        if (time >= 1300 && time < 2400) {\r\n            time -= 1200;\r\n            time += \" PM\"\r\n        }\r\n        // Midnight (12AM - 12:59AM)\r\n        else if (time >= 0 && time < 100) {\r\n            time += 1200;\r\n            time += \" AM\"\r\n        }\r\n        // Morning and noon (1AM - 11:59AM)\r\n        else if (time >= 100 && time < 1200) {\r\n            time += \" AM\"\r\n        }\r\n        // Noon (12PM - 12:59PM)\r\n        else if (time >= 1200 && time < 1300) {\r\n            time += \" PM\"\r\n        }\r\n\r\n        // If hour is 10 or greater\r\n        if (time.length === 6) {\r\n            time = time.slice(0, 1) + \":\" + time.slice(1);\r\n        }\r\n\r\n        else {\r\n            time = time.slice(0, 2) + \":\" + time.slice(2);\r\n        }\r\n        return time;\r\n    }\r\n\r\n    convertDay = day => {\r\n        var days = {\r\n            0: \"Monday\",\r\n            1: \"Tuesday\",\r\n            2: \"Wednesday\",\r\n            3: \"Thursday\",\r\n            4: \"Friday\",\r\n            5: \"Saturday\",\r\n            6: \"Sunday\"\r\n        };\r\n        return days[day];\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"Address\", this.props.businessDetails.location.display_address);\r\n        console.log(\"Hours\", this.props.businessDetails.hours);\r\n        return (\r\n            <CardGroup>\r\n                <Card>\r\n                    <Card.Img src={this.props.businessDetails.image_url} />\r\n                </Card>\r\n                <Card bg=\"dark\" text=\"white\">\r\n                    <Card.Header>\r\n                        <Card.Title><h1>{this.props.businessDetails.name}</h1></Card.Title>\r\n                        <Card.Subtitle className=\"mb-2\">{this.props.businessDetails.display_phone}</Card.Subtitle>\r\n                        <Card.Subtitle className=\"mb-2\">{this.props.businessDetails.rating} ({this.props.businessDetails.review_count} reviews)</Card.Subtitle>\r\n                        {this.props.businessDetails.location !== undefined && this.props.businessDetails.location.display_address.map(line => <Card.Subtitle className=\"mb-1\">{line}</Card.Subtitle>)}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"mb-2\">Regular Hours</Card.Title>\r\n                        {this.props.businessDetails.hours !== undefined && this.props.businessDetails.hours[0].open.map(shift => <div><Card.Subtitle className=\"mb-2\">{this.convertDay(shift.day)}: {this.convertTime(shift.start)} - {this.convertTime(shift.end)}</Card.Subtitle></div>)}\r\n                    </Card.Body>\r\n                </Card>\r\n            </CardGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Button, Form, FormControl, Navbar } from 'react-bootstrap';\r\n\r\nimport Search from \"./pages/Search\";\r\nimport Details from \"./pages/Details\";\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    input: '',\r\n    search_results: [],\r\n    business_id: '',\r\n    business_id_details: {}\r\n  }\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({ input: value });\r\n  }\r\n\r\n  changeId = id => {\r\n    this.setState({ business_id: id });\r\n  }\r\n\r\n  searchBusiness = () => {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${this.state.input}&latitude=${process.env.REACT_APP_NAPERVILLE_LAT}&longitude=${process.env.REACT_APP_NAPERVILLE_LON}`, {\r\n      headers: {\r\n        \"Authorization\": `Bearer ${process.env.REACT_APP_YELP_API_KEY}`,\r\n      }\r\n    }).then(response => {\r\n      this.setState({ search_results: [], selected_business_id: '', business_id_details: {} });\r\n      console.log(\"Business search results response: \", response.data.businesses);\r\n      this.setState({ search_results: response.data.businesses });\r\n    })\r\n  }\r\n\r\n  searchDetails = businessID => {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${businessID}`, {\r\n      headers: {\r\n        \"Authorization\": `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\r\n      }\r\n    }).then(response => {\r\n      console.log(\"Business details response: \", response.data);\r\n      this.setState({ search_results: [], business_id_details: response.data });\r\n      localStorage.setItem(\"Business ID\", businessID);\r\n      console.log(\"Location\", this.state.business_id_details.location.display_address);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">Naperville Business Search</Navbar.Brand>\r\n            <Form inline>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Search business name\"\r\n                className=\"mr-sm-2\"\r\n                value={this.state.input}\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <Link to=\"/search\">\r\n              <Button\r\n                  variant=\"primary\"\r\n                  onClick={this.searchBusiness}\r\n                >Search</Button>\r\n              </Link>\r\n            </Form>\r\n          </Navbar>\r\n          <div className=\"whole-page\">\r\n            <Route\r\n              path=\"/search\"\r\n              render={searchProps => (\r\n                <Search\r\n                  {...searchProps}\r\n                  searchResults={this.state.search_results}\r\n                  changeId={this.changeId}\r\n                  businessId={this.state.business_id}\r\n                />)}\r\n            />\r\n            <Route\r\n              path=\"/details\"\r\n              render={detailProps => (\r\n                <Details\r\n                  {...detailProps}\r\n                  searchDetails={this.searchDetails}\r\n                  businessId={this.state.business_id}\r\n                  businessDetails={this.state.business_id_details}\r\n                />)}\r\n            >\r\n              {this.state.business_id_details === {} && <Redirect to=\"/search\"/>}\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/search\"/>\r\n            </Route>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}